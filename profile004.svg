<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: chain Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1086)">
<title>chain</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1086 780,-1086 780,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-905 8,-1074 524,-1074 524,-905 8,-905"/>
</g>
<!-- File: chain -->
<g id="node1" class="node">
<title>File: chain</title>
<g id="a_node1"><a xlink:title="chain">
<polygon fill="#f8f8f8" stroke="black" points="516,-1066 16,-1066 16,-913 516,-913 516,-1066"/>
<text text-anchor="start" x="24" y="-1049.2" font-family="Times,serif" font-size="16.00">File: chain</text>
<text text-anchor="start" x="24" y="-1031.2" font-family="Times,serif" font-size="16.00">Build ID: a5559dada57521933cea918d5e50fe1a13ca6399</text>
<text text-anchor="start" x="24" y="-1013.2" font-family="Times,serif" font-size="16.00">Type: goroutine</text>
<text text-anchor="start" x="24" y="-995.2" font-family="Times,serif" font-size="16.00">Time: May 9, 2023 at 4:19pm (CST)</text>
<text text-anchor="start" x="24" y="-977.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 3511, 99.94% of 3513 total</text>
<text text-anchor="start" x="24" y="-959.2" font-family="Times,serif" font-size="16.00">Dropped 121 nodes (cum &lt;= 17)</text>
<text text-anchor="start" x="24" y="-922.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="runtime.gopark (3511)">
<polygon fill="#edd5d5" stroke="#b20000" points="776,-86 584,-86 584,0 776,0 776,-86"/>
<text text-anchor="middle" x="680" y="-62.8" font-family="Times,serif" font-size="24.00">runtime</text>
<text text-anchor="middle" x="680" y="-36.8" font-family="Times,serif" font-size="24.00">gopark</text>
<text text-anchor="middle" x="680" y="-10.8" font-family="Times,serif" font-size="24.00">3511 (99.94%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="github.com/tendermint/tendermint/internal/p2p.(*Router).dialPeers.func1 (3328)">
<polygon fill="#edd5d5" stroke="#b20200" points="727,-277 633,-277 633,-224 727,-224 727,-277"/>
<text text-anchor="middle" x="680" y="-266.6" font-family="Times,serif" font-size="8.00">p2p</text>
<text text-anchor="middle" x="680" y="-257.6" font-family="Times,serif" font-size="8.00">(*Router)</text>
<text text-anchor="middle" x="680" y="-248.6" font-family="Times,serif" font-size="8.00">dialPeers</text>
<text text-anchor="middle" x="680" y="-239.6" font-family="Times,serif" font-size="8.00">func1</text>
<text text-anchor="middle" x="680" y="-230.6" font-family="Times,serif" font-size="8.00">0 of 3328 (94.73%)</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node">
<title>N12</title>
<g id="a_node12"><a xlink:title="runtime.selectgo (3467)">
<polygon fill="#edd5d5" stroke="#b20000" points="727,-173 633,-173 633,-137 727,-137 727,-173"/>
<text text-anchor="middle" x="680" y="-162.1" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="680" y="-153.1" font-family="Times,serif" font-size="8.00">selectgo</text>
<text text-anchor="middle" x="680" y="-144.1" font-family="Times,serif" font-size="8.00">0 of 3467 (98.69%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N12 -->
<g id="edge2" class="edge">
<title>N2&#45;&gt;N12</title>
<g id="a_edge2"><a xlink:title="github.com/tendermint/tendermint/internal/p2p.(*Router).dialPeers.func1 &#45;&gt; runtime.selectgo (3328)">
<path fill="none" stroke="#b20200" stroke-width="5" d="M680,-223.95C680,-211.36 680,-196.17 680,-183.35"/>
<polygon fill="#b20200" stroke="#b20200" stroke-width="5" points="684.38,-183.24 680,-173.24 675.63,-183.24 684.38,-183.24"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="github.com/tendermint/tendermint/internal/p2p.(*Router).dialPeers.func1 &#45;&gt; runtime.selectgo (3328)">
<text text-anchor="middle" x="700.5" y="-194.8" font-family="Times,serif" font-size="14.00"> 3328</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="bufio.(*Reader).Peek (17)">
<polygon fill="#ededec" stroke="#b2b1ae" points="612,-1011.5 534,-1011.5 534,-967.5 612,-967.5 612,-1011.5"/>
<text text-anchor="middle" x="573" y="-1001.1" font-family="Times,serif" font-size="8.00">bufio</text>
<text text-anchor="middle" x="573" y="-992.1" font-family="Times,serif" font-size="8.00">(*Reader)</text>
<text text-anchor="middle" x="573" y="-983.1" font-family="Times,serif" font-size="8.00">Peek</text>
<text text-anchor="middle" x="573" y="-974.1" font-family="Times,serif" font-size="8.00">0 of 17 (0.48%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="bufio.(*Reader).fill (17)">
<polygon fill="#ededec" stroke="#b2b1ae" points="612,-862 534,-862 534,-818 612,-818 612,-862"/>
<text text-anchor="middle" x="573" y="-851.6" font-family="Times,serif" font-size="8.00">bufio</text>
<text text-anchor="middle" x="573" y="-842.6" font-family="Times,serif" font-size="8.00">(*Reader)</text>
<text text-anchor="middle" x="573" y="-833.6" font-family="Times,serif" font-size="8.00">fill</text>
<text text-anchor="middle" x="573" y="-824.6" font-family="Times,serif" font-size="8.00">0 of 17 (0.48%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge10" class="edge">
<title>N3&#45;&gt;N4</title>
<g id="a_edge10"><a xlink:title="bufio.(*Reader).Peek &#45;&gt; bufio.(*Reader).fill (17)">
<path fill="none" stroke="#b2b1ae" d="M573,-967.37C573,-942.5 573,-900.99 573,-872.37"/>
<polygon fill="#b2b1ae" stroke="#b2b1ae" points="576.5,-872.09 573,-862.09 569.5,-872.09 576.5,-872.09"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="bufio.(*Reader).Peek &#45;&gt; bufio.(*Reader).fill (17)">
<text text-anchor="middle" x="584.5" y="-883.8" font-family="Times,serif" font-size="14.00"> 17</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="net.(*conn).Read (23)">
<polygon fill="#edecec" stroke="#b2b1ac" points="612,-767 534,-767 534,-723 612,-723 612,-767"/>
<text text-anchor="middle" x="573" y="-756.6" font-family="Times,serif" font-size="8.00">net</text>
<text text-anchor="middle" x="573" y="-747.6" font-family="Times,serif" font-size="8.00">(*conn)</text>
<text text-anchor="middle" x="573" y="-738.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="573" y="-729.6" font-family="Times,serif" font-size="8.00">0 of 23 (0.65%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N9 -->
<g id="edge11" class="edge">
<title>N4&#45;&gt;N9</title>
<g id="a_edge11"><a xlink:title="bufio.(*Reader).fill ... net.(*conn).Read (17)">
<path fill="none" stroke="#b2b1ae" stroke-dasharray="1,5" d="M573,-817.9C573,-805.89 573,-790.62 573,-777.24"/>
<polygon fill="#b2b1ae" stroke="#b2b1ae" points="576.5,-777.02 573,-767.02 569.5,-777.02 576.5,-777.02"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="bufio.(*Reader).fill ... net.(*conn).Read (17)">
<text text-anchor="middle" x="584.5" y="-788.8" font-family="Times,serif" font-size="14.00"> 17</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="internal/poll.(*FD).Read (23)">
<polygon fill="#edecec" stroke="#b2b1ac" points="612,-577 534,-577 534,-533 612,-533 612,-577"/>
<text text-anchor="middle" x="573" y="-566.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="573" y="-557.6" font-family="Times,serif" font-size="8.00">(*FD)</text>
<text text-anchor="middle" x="573" y="-548.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="573" y="-539.6" font-family="Times,serif" font-size="8.00">0 of 23 (0.65%)</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="internal/poll.(*pollDesc).waitRead (26)">
<polygon fill="#edecec" stroke="#b2b0ab" points="612,-467 534,-467 534,-423 612,-423 612,-467"/>
<text text-anchor="middle" x="573" y="-456.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="573" y="-447.6" font-family="Times,serif" font-size="8.00">(*pollDesc)</text>
<text text-anchor="middle" x="573" y="-438.6" font-family="Times,serif" font-size="8.00">waitRead</text>
<text text-anchor="middle" x="573" y="-429.6" font-family="Times,serif" font-size="8.00">0 of 26 (0.74%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N7 -->
<g id="edge7" class="edge">
<title>N5&#45;&gt;N7</title>
<g id="a_edge7"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*pollDesc).waitRead (23)">
<path fill="none" stroke="#b2b1ac" d="M573,-532.92C573,-517.09 573,-495.15 573,-477.27"/>
<polygon fill="#b2b1ac" stroke="#b2b1ac" points="576.5,-477.03 573,-467.03 569.5,-477.03 576.5,-477.03"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*pollDesc).waitRead (23)">
<text text-anchor="middle" x="600.5" y="-503.8" font-family="Times,serif" font-size="14.00"> 23</text>
<text text-anchor="middle" x="600.5" y="-488.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="internal/poll.(*pollDesc).wait (26)">
<polygon fill="#edecec" stroke="#b2b0ab" points="612,-372 534,-372 534,-328 612,-328 612,-372"/>
<text text-anchor="middle" x="573" y="-361.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="573" y="-352.6" font-family="Times,serif" font-size="8.00">(*pollDesc)</text>
<text text-anchor="middle" x="573" y="-343.6" font-family="Times,serif" font-size="8.00">wait</text>
<text text-anchor="middle" x="573" y="-334.6" font-family="Times,serif" font-size="8.00">0 of 26 (0.74%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="internal/poll.runtime_pollWait (26)">
<polygon fill="#edecec" stroke="#b2b0ab" points="614.5,-268.5 531.5,-268.5 531.5,-232.5 614.5,-232.5 614.5,-268.5"/>
<text text-anchor="middle" x="573" y="-257.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="573" y="-248.6" font-family="Times,serif" font-size="8.00">runtime_pollWait</text>
<text text-anchor="middle" x="573" y="-239.6" font-family="Times,serif" font-size="8.00">0 of 26 (0.74%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N8 -->
<g id="edge3" class="edge">
<title>N6&#45;&gt;N8</title>
<g id="a_edge3"><a xlink:title="internal/poll.(*pollDesc).wait &#45;&gt; internal/poll.runtime_pollWait (26)">
<path fill="none" stroke="#b2b0ab" d="M573,-327.84C573,-313.46 573,-294.31 573,-278.78"/>
<polygon fill="#b2b0ab" stroke="#b2b0ab" points="576.5,-278.72 573,-268.72 569.5,-278.72 576.5,-278.72"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="internal/poll.(*pollDesc).wait &#45;&gt; internal/poll.runtime_pollWait (26)">
<text text-anchor="middle" x="584.5" y="-298.8" font-family="Times,serif" font-size="14.00"> 26</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N6 -->
<g id="edge4" class="edge">
<title>N7&#45;&gt;N6</title>
<g id="a_edge4"><a xlink:title="internal/poll.(*pollDesc).waitRead &#45;&gt; internal/poll.(*pollDesc).wait (26)">
<path fill="none" stroke="#b2b0ab" d="M573,-422.9C573,-410.89 573,-395.62 573,-382.24"/>
<polygon fill="#b2b0ab" stroke="#b2b0ab" points="576.5,-382.02 573,-372.02 569.5,-382.02 576.5,-382.02"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="internal/poll.(*pollDesc).waitRead &#45;&gt; internal/poll.(*pollDesc).wait (26)">
<text text-anchor="middle" x="584.5" y="-393.8" font-family="Times,serif" font-size="14.00"> 26</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="runtime.netpollblock (26)">
<polygon fill="#edecec" stroke="#b2b0ab" points="614,-173 536,-173 536,-137 614,-137 614,-173"/>
<text text-anchor="middle" x="575" y="-162.1" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="575" y="-153.1" font-family="Times,serif" font-size="8.00">netpollblock</text>
<text text-anchor="middle" x="575" y="-144.1" font-family="Times,serif" font-size="8.00">0 of 26 (0.74%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N11 -->
<g id="edge5" class="edge">
<title>N8&#45;&gt;N11</title>
<g id="a_edge5"><a xlink:title="internal/poll.runtime_pollWait &#45;&gt; runtime.netpollblock (26)">
<path fill="none" stroke="#b2b0ab" d="M573.37,-232.35C573.66,-218.64 574.08,-199.17 574.42,-183.32"/>
<polygon fill="#b2b0ab" stroke="#b2b0ab" points="577.92,-183.11 574.64,-173.04 570.92,-182.96 577.92,-183.11"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="internal/poll.runtime_pollWait &#45;&gt; runtime.netpollblock (26)">
<text text-anchor="middle" x="586.5" y="-194.8" font-family="Times,serif" font-size="14.00"> 26</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="net.(*netFD).Read (23)">
<polygon fill="#edecec" stroke="#b2b1ac" points="612,-672 534,-672 534,-628 612,-628 612,-672"/>
<text text-anchor="middle" x="573" y="-661.6" font-family="Times,serif" font-size="8.00">net</text>
<text text-anchor="middle" x="573" y="-652.6" font-family="Times,serif" font-size="8.00">(*netFD)</text>
<text text-anchor="middle" x="573" y="-643.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="573" y="-634.6" font-family="Times,serif" font-size="8.00">0 of 23 (0.65%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N10 -->
<g id="edge8" class="edge">
<title>N9&#45;&gt;N10</title>
<g id="a_edge8"><a xlink:title="net.(*conn).Read &#45;&gt; net.(*netFD).Read (23)">
<path fill="none" stroke="#b2b1ac" d="M573,-722.9C573,-710.89 573,-695.62 573,-682.24"/>
<polygon fill="#b2b1ac" stroke="#b2b1ac" points="576.5,-682.02 573,-672.02 569.5,-682.02 576.5,-682.02"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="net.(*conn).Read &#45;&gt; net.(*netFD).Read (23)">
<text text-anchor="middle" x="584.5" y="-693.8" font-family="Times,serif" font-size="14.00"> 23</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N5 -->
<g id="edge9" class="edge">
<title>N10&#45;&gt;N5</title>
<g id="a_edge9"><a xlink:title="net.(*netFD).Read &#45;&gt; internal/poll.(*FD).Read (23)">
<path fill="none" stroke="#b2b1ac" d="M573,-627.9C573,-615.89 573,-600.62 573,-587.24"/>
<polygon fill="#b2b1ac" stroke="#b2b1ac" points="576.5,-587.02 573,-577.02 569.5,-587.02 576.5,-587.02"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="net.(*netFD).Read &#45;&gt; internal/poll.(*FD).Read (23)">
<text text-anchor="middle" x="584.5" y="-598.8" font-family="Times,serif" font-size="14.00"> 23</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N1 -->
<g id="edge6" class="edge">
<title>N11&#45;&gt;N1</title>
<g id="a_edge6"><a xlink:title="runtime.netpollblock &#45;&gt; runtime.gopark (26)">
<path fill="none" stroke="#b2b0ab" d="M591.41,-136.81C602.51,-125.18 617.79,-109.18 632.53,-93.73"/>
<polygon fill="#b2b0ab" stroke="#b2b0ab" points="635.33,-95.86 639.7,-86.21 630.27,-91.03 635.33,-95.86"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="runtime.netpollblock &#45;&gt; runtime.gopark (26)">
<text text-anchor="middle" x="632.5" y="-107.8" font-family="Times,serif" font-size="14.00"> 26</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N1 -->
<g id="edge1" class="edge">
<title>N12&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="runtime.selectgo &#45;&gt; runtime.gopark (3467)">
<path fill="none" stroke="#b20000" stroke-width="5" d="M680,-136.81C680,-125.82 680,-110.91 680,-96.26"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="5" points="684.38,-96.21 680,-86.21 675.63,-96.21 684.38,-96.21"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.selectgo &#45;&gt; runtime.gopark (3467)">
<text text-anchor="middle" x="700.5" y="-107.8" font-family="Times,serif" font-size="14.00"> 3467</text>
</a>
</g>
</g>
</g>
</g></svg>
